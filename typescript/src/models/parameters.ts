/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const body: coreHttp.OperationParameter = {
  parameterPath: "body",
  mapper: {
    serializedName: "body",
    required: true,
    type: {
      name: "any"
    }
  }
};

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const databaseName: coreHttp.OperationURLParameter = {
  parameterPath: "databaseName",
  mapper: {
    serializedName: "databaseName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const collectionName: coreHttp.OperationURLParameter = {
  parameterPath: "collectionName",
  mapper: {
    serializedName: "collectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const xMsVersion: coreHttp.OperationParameter = {
  parameterPath: "xMsVersion",
  mapper: {
    defaultValue: "2018-12-31",
    serializedName: "x-ms-version",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const xMsDate: coreHttp.OperationParameter = {
  parameterPath: "xMsDate",
  mapper: {
    serializedName: "x-ms-date",
    required: true,
    type: {
      name: "DateTime"
    }
  }
};

export const xMsDocumentdbPartitionkey: coreHttp.OperationParameter = {
  parameterPath: "xMsDocumentdbPartitionkey",
  mapper: {
    serializedName: "x-ms-documentdb-partitionkey",
    required: true,
    type: {
      name: "Sequence",
      element: {
        type: { name: "Composite", className: "PartitionKeyItemsItem" }
      }
    }
  }
};

export const xMsMaxItemCount: coreHttp.OperationParameter = {
  parameterPath: "xMsMaxItemCount",
  mapper: {
    constraints: {},
    serializedName: "x-ms-max-item-count",
    type: {
      name: "Number"
    }
  }
};

export const xMsContinuation: coreHttp.OperationParameter = {
  parameterPath: "xMsContinuation",
  mapper: {
    serializedName: "x-ms-continuation",
    type: {
      name: "String"
    }
  }
};

export const documentId: coreHttp.OperationURLParameter = {
  parameterPath: "documentId",
  mapper: {
    serializedName: "documentId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body1: coreHttp.OperationParameter = {
  parameterPath: "body",
  mapper: Mappers.DocumentWithId
};

export const body2: coreHttp.OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: Mappers.DatabaseRequest
};

export const body3: coreHttp.OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: Mappers.CollectionRequest
};

export const xMsOfferThroughput: coreHttp.OperationParameter = {
  parameterPath: "xMsOfferThroughput",
  mapper: {
    constraints: {
      InclusiveMaximum: 10000000,
      InclusiveMinimum: 400,
      MultipleOf: 100
    },
    serializedName: "x-ms-offer-throughput",
    required: true,
    type: {
      name: "Number"
    }
  }
};
